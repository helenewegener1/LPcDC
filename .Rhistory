seurat_merged <- FindVariableFeatures(seurat_merged, assay = "RNA")
seurat_merged <- ScaleData(seurat_merged, assay = "RNA")
seurat_merged <- RunPCA(seurat_merged, assay = "RNA")
# This is just for plotting UMAP
ElbowPlot(seurat_merged)
seurat_merged <- FindNeighbors(seurat_merged, dims = 1:20)
seurat_merged <- FindClusters(seurat_merged, resolution = 0.4)
seurat_merged <- RunUMAP(seurat_merged, reduction = "pca", dims = 1:20)
# Visualize with UMAP stratified by dataset - pre integration
DimPlot(seurat_merged, reduction = "umap", group.by = "orig.ident") +
labs(title = "UMAP - pre integration")
ggsave("04_integration/plot/v4/RNA/UMAP_pre_integration_orig.ident.pdf")
DefaultAssay(seurat_merged)
# Run Harmony on the merged object
seurat_integrated <- RunHarmony(
seurat_merged,
group.by.vars = "orig.ident",  # metadata column indicating dataset
dims = 1:20
)
seurat_integrated <- FindNeighbors(seurat_integrated, reduction = "harmony", dims = 1:20)
seurat_integrated <- RunUMAP(seurat_integrated, reduction = "harmony", dims = 1:20)
# Visualize with UMAP stratified by dataset - post harmony integration
DimPlot(seurat_integrated, reduction = "umap", group.by = "orig.ident") +
labs(title = "UMAP - post harmonny integration")
res_list <- c(0.3, 0.5, 0.7)
for (res in res_list){
# res <- 0.2
seurat_integrated <- FindClusters(seurat_integrated, resolution = res)
DimPlot(seurat_integrated, reduction = "umap", group.by = "seurat_clusters", label = TRUE) +
labs(title = "UMAP - post harmony integration",
subtitle = glue("res: {res}"))
ggsave(glue("04_integration/plot/v4/RNA/UMAP_post_harmony_integration_seurat_clusters_res_{res}.pdf"))
}
library(SeuratDisk)
library(rhdf5)
# All in one file
obj_tmp <- seurat_integrated
DefaultAssay(obj_tmp)
Layers(obj_tmp[["RNA"]])
obj_tmp[["RNA3"]] <- as(object = obj_tmp[["RNA"]], Class = "Assay")
DefaultAssay(obj_tmp) <- "RNA3"
obj_tmp[["RNA"]] <- NULL
obj_tmp <- RenameAssays(object = obj_tmp, RNA3 = 'RNA')
# Extract the embeddings
embedding <- Embeddings(obj_tmp, reduction = "harmony")
obj_tmp[["RNA_harmony"]] <- CreateDimReducObject(
embeddings = embedding,
key = "RNA_harmony_",
assay = DefaultAssay(obj_tmp),
global = TRUE
)
# Remove the problematic reduction to keep things clean
obj_tmp[["harmony"]] <- NULL
# Verify the new reduction name (optional)
Reductions(obj_tmp)
filename <- glue("04_integration/out/mydata_v4_rna.h5Seurat")
SaveH5Seurat(obj_tmp, filename = filename, overwrite = TRUE)
Convert(filename, dest = "h5ad", overwrite = TRUE, verbose = FALSE)
saveRDS(seurat_integrated, "04_integration/out/seurat_RNA_harmony.rds")
seurat_integrated
Reductions(seurat_integrated)
# red <- c("SCT_integrated.rpca", "SCT_umap.rpca", "SCT_rpca_clusters")
# red <- c("RNA_integrated.cca", "RNA_umap.cca", "RNA_cca_clusters")
reduction <- "harmony"
umap_reduction.name <- "umap"
# Cluster plot
res <- 0.3
dp <- DimPlot(seurat_integrated, reduction = umap_reduction.name, group.by = glue("{assay}_snn_res.{res}"), label = TRUE) +
labs(title = glue("UMAP - {reduction}"),
subtitle = glue("{assay}_snn_res.{res}"))
assay <- "SCT"
# Cluster plot
res <- 0.3
dp <- DimPlot(seurat_integrated, reduction = umap_reduction.name, group.by = glue("{assay}_snn_res.{res}"), label = TRUE) +
labs(title = glue("UMAP - {reduction}"),
subtitle = glue("{assay}_snn_res.{res}"))
umap_reduction.name
# Cluster plot
res <- 0.3
dp <- DimPlot(seurat_integrated, reduction = umap_reduction.name, group.by = glue("{assay}_snn_res.{res}"), label = TRUE) +
labs(title = glue("UMAP - {reduction}"),
subtitle = glue("{assay}_snn_res.{res}"))
reduction <- "harmony"
umap_reduction.name <- "umap"
cluster.name <- red[[3]]
# red <- c("SCT_integrated.rpca", "SCT_umap.rpca", "SCT_rpca_clusters")
# red <- c("RNA_integrated.cca", "RNA_umap.cca", "RNA_cca_clusters")
reduction <- "harmony"
umap_reduction.name <- "umap"
# cluster.name <- red[[3]]
assay <- "SCT"
# Cluster plot
res <- 0.3
dp <- DimPlot(seurat_integrated, reduction = umap_reduction.name, group.by = glue("{assay}_snn_res.{res}"), label = TRUE) +
labs(title = glue("UMAP - {reduction}"),
subtitle = glue("{assay}_snn_res.{res}"))
seurat_integrated[[]] %>% colnames()
# cluster.name <- red[[3]]
assay <- "RNA"
# Cluster plot
res <- 0.3
dp <- DimPlot(seurat_integrated, reduction = umap_reduction.name, group.by = glue("{assay}_snn_res.{res}"), label = TRUE) +
labs(title = glue("UMAP - {reduction}"),
subtitle = glue("{assay}_snn_res.{res}"))
dp
########################### CD45+ -> All immune cells ##########################
grep("CD45", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Ptprc", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative to
# Define marker cell information
marker_genes <- c("Ptprc")
description <- "CD45+ -> All immune cells"
reduction
subfolder <- "v4_rna_harmony"
########################### CD45+ -> All immune cells ##########################
grep("CD45", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Ptprc", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative to
# Define marker cell information
marker_genes <- c("Ptprc")
description <- "CD45+ -> All immune cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
source("05_annotation/script/functions.R")
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
setwd("~/Documents/projects/project_cDC/LPcDC/")
# Load libraries
library(SeuratObject)
library(Seurat)
library(dplyr)
library(glue)
library(ggplot2)
library(patchwork)
library(stringr)
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
##################### MHCII -> all antigen presenting cells #####################
grep("H2-A", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
# Define marker cell information
marker_genes <- c("H2-Ab1", "H2-Aa")
description <- "MHCII -> all antigen presenting cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Cluster plot
res <- 0.3
dp <- DimPlot(seurat_integrated, reduction = umap_reduction.name, group.by = glue("{assay}_snn_res.{res}"), label = TRUE) +
labs(title = glue("UMAP - {reduction}"),
subtitle = glue("{assay}_snn_res.{res}"))
########################### CD45+ -> All immune cells ##########################
grep("CD45", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Ptprc", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative to
# Define marker cell information
marker_genes <- c("Ptprc")
description <- "CD45+ -> All immune cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
##################### MHCII -> all antigen presenting cells #####################
grep("H2-A", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
# Define marker cell information
marker_genes <- c("H2-Ab1", "H2-Aa")
description <- "MHCII -> all antigen presenting cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
################################# XCR1 -> cDC1 #################################
grep("XCR1", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
# Define marker cell information
marker_genes <- c("Xcr1")
description <- "XCR1 -> cDC1"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
#####################  SIRPa, CD11b -> Macrophages and cDC2 #####################
grep("SIRPa", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
grep("CD11b", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Itgam", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative to
# Define marker cell information
marker_genes <- c("Sirpa", "Itgam")
description <- "SIRPa, CD11b -> Macrophages and cDC2"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
########################## CD11c -> Macrophages + DCs ##########################
grep("CD11c", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Itgax", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative to
# Define marker cell information
marker_genes <- c("Itgax")
description <- "CD11c -> Macrophages + DCs"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
########################## CD64, F4/80 -> Macrophages ##########################
grep("CD64", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Fcgr1", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative
grep("F4/80", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Adgre1", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative
# Define marker cell information
marker_genes <- c("Fcgr1", "Adgre1")
description <- "CD64, F4/80 -> Macrophages"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
############################# CD19, B220 -> B cells ############################
grep("CD19", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
grep("B220", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Ptprc", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative
# Define marker cell information
marker_genes <- c("Cd19", "Ptprc")
description <- "CD19, B220 -> B cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
############################# CD3, TCRb -> T cells #############################
grep("CD3", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
grep("TCRb", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
# Define marker cell information
marker_genes <- c("Cd3e", "Cd3d", "Cd3g")
description <- "CD3, TCRb -> T cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
############################# Ly6G -> Neutrophils #############################
grep("Ly6G", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
# Define marker cell information
marker_genes <- c("Ly6g")
description <- "Ly6G -> Neutrophils"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
############################### NK1.1 -> NK cells ##############################
grep("NK1", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Klrb1c", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative
# Define marker cell information
marker_genes <- c("Klrb1c")
description <- "NK1.1 -> NK cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
############################ SiglecF -> Eosinophils ############################
grep("SiglecF", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
# Define marker cell information
marker_genes <- c("Siglecf")
description <- "SiglecF -> Eosinophils"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
#################################################################################
# Markers for subsets in the intesine specifically: cDC2: CD103+ CD11b+ or CD103- CD11b+, cDC1: CD103+ CD11b-
grep("Itgae", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # CD103
grep("Itgam", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # CD11b
# Define marker cell information
marker_genes <- c("Itgae", "Itgam")
description <- "Markers for subsets in the intesine specifically: cDC2: CD103+ CD11b+ or CD103- CD11b+, cDC1: CD103+ CD11b-"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
setwd("~/Documents/projects/project_cDC/LPcDC/")
# Load libraries
library(SeuratObject)
library(Seurat)
library(glmGamPoi)
library(dplyr)
library(glue)
library(ggplot2)
library(harmony)
# Load data
seurat_obj_finalQC_list <- readRDS("03_QC/out/seurat_obj_finalQC_list.rds")
############### SCTransform individual datasets after filtering ################
# seurat_obj_list <- list()
#
# for (sample_name in names(seurat_obj_finalQC_list)) {
#
#   # Define seurat object of sample
#   seurat_obj_finalQC <- seurat_obj_finalQC_list[[sample_name]]
#
#   # SCTransform gives a warning because the SCTransform assay from doublets were removed is overwritten
#   seurat_obj_tmp <- SCTransform(seurat_obj_finalQC, assay = "RNA", layer = "counts", verbose = FALSE)
#
#   # Save in list
#   seurat_obj_list[[sample_name]] <- seurat_obj_tmp
#
#   # Clean up
#   rm(seurat_obj_tmp)
#
# }
######################### Merge into one Seurat object #########################
# Merge
seurat_obj_list <- seurat_obj_finalQC_list
seurat_merged <- merge(seurat_obj_list[[1]], y = seurat_obj_list[-1])
DefaultAssay(seurat_merged) <- "SCT"
# Control all cells from each dataset are included
seurat_merged@meta.data$orig.ident %>% table(useNA = "always")
# Find variable features
# features <- SelectIntegrationFeatures(object.list = seurat_obj_finalQC_list, nfeatures = 3000)
# VariableFeatures(seurat_merged) <- features
# rm(seurat_obj_finalQC_list)
# Seurat workflow on merged data
seurat_merged <- SCTransform(seurat_merged, assay = "RNA", layer = "counts", verbose = FALSE)
# VariableFeatures(seurat_merged) <- SelectIntegrationFeatures(
#   object.list = SplitObject(seurat_merged, split.by = "orig.ident"),
#   nfeatures = 3000
# )
# Seurat workflow on merged data
seurat_merged <- RunPCA(seurat_merged, assay = "SCT", verbose = FALSE) # HW: Yes - SCT assay for PCA
# ^^ Needs the part above to run harmony ^^
# This is just for plotting UMAP
ElbowPlot(seurat_merged)
seurat_merged <- FindNeighbors(seurat_merged, dims = 1:20)
seurat_merged <- FindClusters(seurat_merged, resolution = 0.4)
seurat_merged <- RunUMAP(seurat_merged, reduction = "pca", dims = 1:20)
# Visualize with UMAP stratified by dataset - pre integration
DimPlot(seurat_merged, reduction = "umap", group.by = "orig.ident") +
labs(title = "UMAP - pre integration")
ggsave("04_integration/plot/v4/SCT/UMAP_pre_integration_orig.ident.pdf")
saveRDS(seurat_integrated, "04_integration/out/seurat_SCT_harmony.rds")
DefaultAssay(seurat_merged)
# Run Harmony on the merged object
seurat_integrated <- RunHarmony(
seurat_merged,
group.by.vars = "orig.ident",  # metadata column indicating dataset
dims = 1:20
)
# Visualize with UMAP stratified by dataset - post harmony integration
DimPlot(seurat_integrated, reduction = "umap", group.by = "orig.ident") +
labs(title = "UMAP - post harmonny integration")
ggsave("04_integration/plot/v4/SCT/UMAP_post_harmony_integration_orig.ident.pdf")
saveRDS(seurat_integrated, "04_integration/out/seurat_SCT_harmony.rds")
setwd("~/Documents/projects/project_cDC/LPcDC/")
# Load libraries
library(SeuratObject)
library(Seurat)
library(dplyr)
library(glue)
library(ggplot2)
library(patchwork)
library(stringr)
source("05_annotation/script/functions.R")
# Load data
# assay <- "RNA"
# subfolder <- "v4_rna_harmony"
assay <- "SCT"
subfolder <- "v4_sct_harmony"
seurat_integrated <- readRDS(glue("04_integration/out/seurat_{assay}_harmony.rds"))
Reductions(seurat_integrated)
reduction <- "harmony"
umap_reduction.name <- "umap"
# Cluster plot
res <- 0.3
dp <- DimPlot(seurat_integrated, reduction = umap_reduction.name, group.by = glue("{assay}_snn_res.{res}"), label = TRUE) +
labs(title = glue("UMAP - {reduction}"),
subtitle = glue("{assay}_snn_res.{res}"))
Reductions(seurat_integrated)
seurat_integrated[[]] %>% colnames()
# Cluster plot
res <- 0.4
dp <- DimPlot(seurat_integrated, reduction = umap_reduction.name, group.by = glue("{assay}_snn_res.{res}"), label = TRUE) +
labs(title = glue("UMAP - {reduction}"),
subtitle = glue("{assay}_snn_res.{res}"))
dp
# Cluster plot
res <- 0.4
dp <- DimPlot(seurat_integrated, reduction = umap_reduction.name, group.by = glue("{assay}_snn_res.{res}"), label = TRUE) +
labs(title = glue("UMAP - {reduction}"),
subtitle = glue("{assay}_snn_res.{res}"))
########################### CD45+ -> All immune cells ##########################
grep("CD45", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Ptprc", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative to
# Define marker cell information
marker_genes <- c("Ptprc")
description <- "CD45+ -> All immune cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Cluster plot
res <- 0.4
dp <- DimPlot(seurat_integrated, reduction = umap_reduction.name, group.by = glue("{assay}_snn_res.{res}"), label = TRUE) +
labs(title = glue("UMAP - {reduction}"),
subtitle = glue("{assay}_snn_res.{res}"))
########################### CD45+ -> All immune cells ##########################
grep("CD45", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Ptprc", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative to
# Define marker cell information
marker_genes <- c("Ptprc")
description <- "CD45+ -> All immune cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
##################### MHCII -> all antigen presenting cells #####################
grep("H2-A", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
# Define marker cell information
marker_genes <- c("H2-Ab1", "H2-Aa")
description <- "MHCII -> all antigen presenting cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
################################# XCR1 -> cDC1 #################################
grep("XCR1", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
# Define marker cell information
marker_genes <- c("Xcr1")
description <- "XCR1 -> cDC1"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
#####################  SIRPa, CD11b -> Macrophages and cDC2 #####################
grep("SIRPa", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
grep("CD11b", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Itgam", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative to
# Define marker cell information
marker_genes <- c("Sirpa", "Itgam")
description <- "SIRPa, CD11b -> Macrophages and cDC2"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
########################## CD11c -> Macrophages + DCs ##########################
grep("CD11c", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Itgax", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative to
# Define marker cell information
marker_genes <- c("Itgax")
description <- "CD11c -> Macrophages + DCs"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
########################## CD64, F4/80 -> Macrophages ##########################
grep("CD64", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Fcgr1", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative
grep("F4/80", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Adgre1", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative
# Define marker cell information
marker_genes <- c("Fcgr1", "Adgre1")
description <- "CD64, F4/80 -> Macrophages"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
############################# CD19, B220 -> B cells ############################
grep("CD19", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
grep("B220", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Ptprc", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative
# Define marker cell information
marker_genes <- c("Cd19", "Ptprc")
description <- "CD19, B220 -> B cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
############################# CD3, TCRb -> T cells #############################
grep("CD3", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
grep("TCRb", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
# Define marker cell information
marker_genes <- c("Cd3e", "Cd3d", "Cd3g")
description <- "CD3, TCRb -> T cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
############################# Ly6G -> Neutrophils #############################
grep("Ly6G", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
# Define marker cell information
marker_genes <- c("Ly6g")
description <- "Ly6G -> Neutrophils"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
############################### NK1.1 -> NK cells ##############################
grep("NK1", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # Can't find
grep("Klrb1c", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # chatGPT alternative
# Define marker cell information
marker_genes <- c("Klrb1c")
description <- "NK1.1 -> NK cells"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
############################ SiglecF -> Eosinophils ############################
grep("SiglecF", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE)
# Define marker cell information
marker_genes <- c("Siglecf")
description <- "SiglecF -> Eosinophils"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
#################################################################################
# Markers for subsets in the intesine specifically: cDC2: CD103+ CD11b+ or CD103- CD11b+, cDC1: CD103+ CD11b-
grep("Itgae", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # CD103
grep("Itgam", rownames(seurat_integrated), value = TRUE, ignore.case = TRUE) # CD11b
# Define marker cell information
marker_genes <- c("Itgae", "Itgam")
description <- "Markers for subsets in the intesine specifically: cDC2: CD103+ CD11b+ or CD103- CD11b+, cDC1: CD103+ CD11b-"
# Make plots
explore_annotation_plot(seurat_obj = seurat_integrated, dimplot = dp, marker_genes = marker_genes, description = description, subfolder = subfolder)
# Clean up
rm(marker_genes, description)
